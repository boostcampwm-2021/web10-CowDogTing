openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'CowDogTing'
  description: 'API 명세'
servers:
  - description : API 명세
    url: http://localhost:4000/
paths:
  /api/core/userInfo:
    get:
      summary: 유저 정보 획득
      parameters:
      responses:
        '200':
          description: 유저 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  image:
                    type: number
                  location:
                    type: string
                  sex: 
                    type: string
                  age: 
                    type: number
                  info: 
                    type: string
              example:
                id: "yj"
                image: 33
                location: "우만동"
                sex: "male"
                age: 25
                info: "안녕하세요"
  /api/core/joinChatInfo:
    get:
      summary: 참여 채팅방 정보 가져오기 
      parameters:
      responses:
        '200':
          description: 참여 채팅방 정보
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    chatRoomID:
                      type: number
                    notReadNum:
                      type: number
              example:
                [
                  {
                    chatRoomID: 1,
                    notReadNum: 3
                  },
                  {
                    chatRoomID: 2,
                    notReadNum: 2
                  },
                ]
  api/auth/login:
    get:
      summary: 로그인 버튼 클릭(유저 정보 받아오기)
      parameters:
      responses:
        '200':
          description: 유저 정보
          content:
            application/json:
              schema:
                type: boolean
              example:
                true
  api/auth/validation:
    get:
      summary: 회원가입(아이디 중복 검사)
      parameters:
        - name: id
          in: path
          required: true
          description: 유저 아이디
          schema:
            type: string
          example:
            "my_id"
      responses:
        '200':
          description: 회원가입 아이디 중복 검사 확인
          schema:
            type: boolean
          example:
            true
  api/auth/register:
    post:
      summary: 회원가입
      parameters:
        - name: userInfo
          in: body
          required: true
          description: 유저 정보
          schema:
            type: object
            properties:
                id: 
                  type: string
                image:
                  type: number
                location:
                  type: string
                sex:
                  type: string
                age:
                  type: number
      responses:
        '200':
          description: 회원가입 성공 여부
          schema:
            type: boolean
  api/team/create:
    post:
      summary: 팀 생성
      parameters:
        - name: teamInfo
          in: body
          required: true
          description: 팀 정보
          schema:
            type: object
            properties:
              image:
                type: binary
              id:
                type: string
              info:
                type: string
              location:
                type: string
              age:
                type: number
              leader:
                type: string
              sex:
                type: string
          example:
      responses:
        '200':
          description: 팀 생성 여부
          schema:
            type: boolean
          example:
            true
  api/team/info:
    get:
      summary: 팀 정보 가져오기
      parameters:
        - name: teamID
          in: query
          description: 팀 아이디
          required: true
          schema:
            type: number
          example:
            123
      responses:
        '200':
          description: 팀 정보
          content:
            application/json:
              schema: 
                type: object
                properties:
                  id: 
                    type: string
                  info: 
                    type: string
                  location: 
                    type: string
                  age: 
                    type: number
                  leader: 
                    type: string
                  sex: 
                    type: string
                  image: 
                    type: number
                  member:
                    type: array
                    items:
                      type: object
                      properties:
                        id: 
                          type: string
                        image: 
                          type: string
                        location: 
                          type: string
                        age: 
                          type: number
                        sex: 
                          type:  string
                        info: 
                          type: string
              example:
  api/team/update:
    post:
      summary: 팀 정보 수정
      parameters:
      - name: teamInfo
        in: body
        description: 새로운 팀 정보
        required: true
        schema:
          type: object
          properties:
            id:
              type: string
            info:
              type: string
            location:
              type: string
            image:
              type: number
        example:
          {

          }
      responses:
        '200':
          description: 팀 정보 수정 성공 여부
          content:
            application/json:
              schema:
                type: boolean
              example:
                true

  api/team/invite:
    post:
      summary: 팀원 초대하기
      parameters:
      - name: inviteID
        in: body
        description: 초대하려는 유저 아이디
        required: true
        schema:
          type: object
          properties:
            id:
              type: string
      responses:
        '200':
          description: 초대 성공 여부
          content:
            application/json:
              schema:
                type: boolean
              example:
                true
  api/profile:
    get:
      summary: 소개 프로필 가져오기
      parameters:
      - name: person
        in: query
        description: 인원 수
        required: true
        schema:
          type: number
        example:
          1
      responses:
        '200':
          description: 소개 프로필 데이터
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: object
                  properties:
                    id:
                      type: string
                    image:
                      type: number
                    location:
                      type: string
                    sex:
                      type: string
                    age:
                      type: number
                    info:
                      type: string
              example:
                [
                  {
                    id: "yj",
                    image: "Image",
                    location: "우만동",
                    sex: "female",
                    age: 25,
                    info: "안녕하세요",
                  },
                  {
                    id: "hansory",
                    image: "Image",
                    location: "영통동",
                    sex: "female",
                    age: 20,
                    info: "반가워요",
                  }
                ]

              

                  


